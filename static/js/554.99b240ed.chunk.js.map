{"version":3,"file":"static/js/554.99b240ed.chunk.js","mappings":"yOAMe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAyBjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAGZC,SAAU,SAACC,EAAQC,IA9BF,SAAAD,GACnBN,GAASQ,EAAAA,EAAAA,IAAMF,GAChB,CA6BKG,CAAaH,GACbC,EAAQG,WACT,EATH,UAWE,UAAC,KAAD,CAAMC,UAAU,OAAhB,WACE,kBAAOC,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,KAAK,WACpC,SAAC,KAAD,CAAcD,KAAK,QAAQE,UAAU,UAErC,kBAAOJ,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,GAAG,WAAWC,KAAK,WAAWC,KAAK,cAC1C,SAAC,KAAD,CAAcD,KAAK,WAAWE,UAAU,UAExC,SAAC,IAAD,CAAQD,KAAK,SAASE,QAAQ,YAA9B,wBAMP,C","sources":["components/Login/LoginView.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\nimport { Button } from '@mui/material';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    dispatch(login(values));\n  };\n\n  // const validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .min(3, 'Your name must be more than 3 symbols!')\n  //     .max(50, 'Your name is too long')\n  //     .matches(\n  //       /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n  //       'Name may contain only letters'\n  //     )\n  //     .required('Please write your name'),\n  //   email: Yup.string()\n  //     .min(3, 'Your name must be more than 3 symbols!')\n  //     .max(50, 'Your name is too long')\n  //     .required('Please write your email'),\n  //   password: Yup.string()\n  //     .min(7, 'Your name must be more than 3 symbols!')\n  //     .max(20, 'Your name is too long')\n  //     .required('Please write your password'),\n  // });\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      // validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form className=\"form\">\n        <label htmlFor=\"email\">Email</label>\n        <Field id=\"email\" name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" component=\"span\" />\n\n        <label htmlFor=\"password\">Password</label>\n        <Field id=\"password\" name=\"password\" type=\"password\" />\n        <ErrorMessage name=\"password\" component=\"span\" />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Log in\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n"],"names":["LoginView","dispatch","useDispatch","initialValues","email","password","onSubmit","values","actions","login","handleSubmit","resetForm","className","htmlFor","id","name","type","component","variant"],"sourceRoot":""}