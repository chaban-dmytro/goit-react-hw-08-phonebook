{"version":3,"file":"static/js/946.af7e5e93.chunk.js","mappings":"mPAOe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,0CACPC,IAAI,GAAI,yBACRC,QACC,yHACA,iCAEDC,SAAS,0BACZC,MAAOP,EAAAA,KACJG,IAAI,EAAG,0CACPC,IAAI,GAAI,yBACRE,SAAS,2BACZE,SAAUR,EAAAA,KACPG,IAAI,EAAG,0CACPC,IAAI,GAAI,yBACRE,SAAS,gCAGd,OACE,SAAC,KAAD,CACEG,cAAe,CACbP,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZT,iBAAkBA,EAClBW,SAAU,SAACC,EAAQC,IAhCF,SAAAD,GACnBE,QAAQC,IAAIH,GACZd,GAASkB,EAAAA,EAAAA,IAASJ,GACnB,CA8BKK,CAAaL,GACbC,EAAQK,WACT,EAVH,UAYE,UAAC,KAAD,CAAMC,UAAU,OAAhB,WACE,kBAAOC,QAAQ,OAAf,mBACA,SAAC,KAAD,CAAOC,GAAG,OAAOlB,KAAK,OAAOmB,KAAK,UAClC,SAAC,KAAD,CAAcnB,KAAK,OAAOoB,UAAU,UAEpC,kBAAOH,QAAQ,QAAf,oBACA,SAAC,KAAD,CAAOC,GAAG,QAAQlB,KAAK,QAAQmB,KAAK,WACpC,SAAC,KAAD,CAAcnB,KAAK,QAAQoB,UAAU,UAErC,kBAAOH,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,GAAG,WAAWlB,KAAK,WAAWmB,KAAK,cAC1C,SAAC,KAAD,CAAcnB,KAAK,WAAWoB,UAAU,UAExC,SAAC,IAAD,CAAQD,KAAK,SAASE,QAAQ,YAA9B,8BAMP,C","sources":["components/Registration/RegisterView.jsx"],"sourcesContent":["// import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/auth-operations';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from '@mui/material';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    console.log(values);\n    dispatch(register(values));\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Your name must be more than 3 symbols!')\n      .max(50, 'Your name is too long')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Name may contain only letters'\n      )\n      .required('Please write your name'),\n    email: Yup.string()\n      .min(3, 'Your name must be more than 3 symbols!')\n      .max(50, 'Your name is too long')\n      .required('Please write your email'),\n    password: Yup.string()\n      .min(7, 'Your name must be more than 7 symbols!')\n      .max(20, 'Your name is too long')\n      .required('Please write your password'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form className=\"form\">\n        <label htmlFor=\"name\">Name</label>\n        <Field id=\"name\" name=\"name\" type=\"text\" />\n        <ErrorMessage name=\"name\" component=\"span\" />\n\n        <label htmlFor=\"email\">Email</label>\n        <Field id=\"email\" name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" component=\"span\" />\n\n        <label htmlFor=\"password\">Password</label>\n        <Field id=\"password\" name=\"password\" type=\"password\" />\n        <ErrorMessage name=\"password\" component=\"span\" />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Registration\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","validationSchema","Yup","shape","name","min","max","matches","required","email","password","initialValues","onSubmit","values","actions","console","log","register","handleSubmit","resetForm","className","htmlFor","id","type","component","variant"],"sourceRoot":""}